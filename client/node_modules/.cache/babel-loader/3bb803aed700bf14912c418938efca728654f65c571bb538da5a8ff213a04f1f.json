{"ast":null,"code":"var _jsxFileName = \"/mnt/sdb1/MyFiles/Projects/debt-manager/client/src/App/Body/UserPanel/AdminPanel/AdminControls/ManageAccounts/ManageAccounts.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Table from '../../../../../../components/Table';\nimport { api_address } from '../../../../../../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManageAccounts({\n  account\n}) {\n  _s();\n  const [table, setTable] = useState({\n    columnNames: [],\n    rows: []\n  });\n  const key = {\n    id: account.id,\n    password: account.password\n  };\n  useEffect(() => {\n    axios.post(`${api_address}/get-users`, {\n      key\n    }).then(res => {\n      const tableData = res.data;\n      setTable({\n        columnNames: tableData.columnNames,\n        rows: tableData.rows\n      });\n    }).catch(error => {\n      console.error(\"Error fetching table data:\", error);\n    });\n  }, [account.id, account.password, key]);\n  function handleDelete(id) {\n    axios.post(`${api_address}/delete-user`, {\n      key,\n      id\n    }).then(res => {\n      // Fetch the updated table data after deletion\n      axios.post(`${api_address}/get-users`, {\n        key\n      }).then(res => {\n        const tableData = res.data;\n        setTable({\n          columnNames: tableData.columnNames,\n          rows: tableData.rows\n        });\n      }).catch(error => {\n        console.error(\"Error fetching updated table data:\", error);\n      });\n    }).catch(error => {\n      console.error(\"Error deleting user:\", error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columnNames: table.columnNames,\n      rows: table.rows,\n      handleDelete: handleDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(ManageAccounts, \"hlWdDvNf72MA5Ei2/AYvVlDvGhY=\");\n_c = ManageAccounts;\nexport default ManageAccounts;\nvar _c;\n$RefreshReg$(_c, \"ManageAccounts\");","map":{"version":3,"names":["axios","React","useEffect","useState","Table","api_address","jsxDEV","_jsxDEV","ManageAccounts","account","_s","table","setTable","columnNames","rows","key","id","password","post","then","res","tableData","data","catch","error","console","handleDelete","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/mnt/sdb1/MyFiles/Projects/debt-manager/client/src/App/Body/UserPanel/AdminPanel/AdminControls/ManageAccounts/ManageAccounts.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Table from '../../../../../../components/Table';\nimport { api_address } from '../../../../../../config';\n\nfunction ManageAccounts({ account }) {\n  const [table, setTable] = useState({ columnNames: [], rows: [] });\n  const key = { id: account.id, password: account.password };\n\n  useEffect(() => {\n    axios.post(`${api_address}/get-users`, { key })\n      .then((res) => {\n        const tableData = res.data;\n        setTable({ columnNames: tableData.columnNames, rows: tableData.rows });\n      })\n      .catch(error => {\n        console.error(\"Error fetching table data:\", error);\n      });\n  }, [account.id, account.password, key]);\n\n  function handleDelete(id) {\n    axios.post(`${api_address}/delete-user`, { key, id })\n      .then((res) => {\n        // Fetch the updated table data after deletion\n        axios.post(`${api_address}/get-users`, { key })\n          .then((res) => {\n            const tableData = res.data;\n            setTable({ columnNames: tableData.columnNames, rows: tableData.rows });\n          })\n          .catch(error => {\n            console.error(\"Error fetching updated table data:\", error);\n          });\n      })\n      .catch(error => {\n        console.error(\"Error deleting user:\", error);\n      });\n  }\n\n  return (\n    <div>\n      <Table columnNames={table.columnNames} rows={table.rows} handleDelete={handleDelete} />\n    </div>\n  );\n}\n\nexport default ManageAccounts;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,oCAAoC;AACtD,SAASC,WAAW,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,cAAcA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC;IAAEU,WAAW,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EACjE,MAAMC,GAAG,GAAG;IAAEC,EAAE,EAAEP,OAAO,CAACO,EAAE;IAAEC,QAAQ,EAAER,OAAO,CAACQ;EAAS,CAAC;EAE1Df,SAAS,CAAC,MAAM;IACdF,KAAK,CAACkB,IAAI,CAAE,GAAEb,WAAY,YAAW,EAAE;MAAEU;IAAI,CAAC,CAAC,CAC5CI,IAAI,CAAEC,GAAG,IAAK;MACb,MAAMC,SAAS,GAAGD,GAAG,CAACE,IAAI;MAC1BV,QAAQ,CAAC;QAAEC,WAAW,EAAEQ,SAAS,CAACR,WAAW;QAAEC,IAAI,EAAEO,SAAS,CAACP;MAAK,CAAC,CAAC;IACxE,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACN,CAAC,EAAE,CAACf,OAAO,CAACO,EAAE,EAAEP,OAAO,CAACQ,QAAQ,EAAEF,GAAG,CAAC,CAAC;EAEvC,SAASW,YAAYA,CAACV,EAAE,EAAE;IACxBhB,KAAK,CAACkB,IAAI,CAAE,GAAEb,WAAY,cAAa,EAAE;MAAEU,GAAG;MAAEC;IAAG,CAAC,CAAC,CAClDG,IAAI,CAAEC,GAAG,IAAK;MACb;MACApB,KAAK,CAACkB,IAAI,CAAE,GAAEb,WAAY,YAAW,EAAE;QAAEU;MAAI,CAAC,CAAC,CAC5CI,IAAI,CAAEC,GAAG,IAAK;QACb,MAAMC,SAAS,GAAGD,GAAG,CAACE,IAAI;QAC1BV,QAAQ,CAAC;UAAEC,WAAW,EAAEQ,SAAS,CAACR,WAAW;UAAEC,IAAI,EAAEO,SAAS,CAACP;QAAK,CAAC,CAAC;MACxE,CAAC,CAAC,CACDS,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D,CAAC,CAAC;IACN,CAAC,CAAC,CACDD,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN;EAEA,oBACEjB,OAAA;IAAAoB,QAAA,eACEpB,OAAA,CAACH,KAAK;MAACS,WAAW,EAAEF,KAAK,CAACE,WAAY;MAACC,IAAI,EAAEH,KAAK,CAACG,IAAK;MAACY,YAAY,EAAEA;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpF,CAAC;AAEV;AAACrB,EAAA,CAtCQF,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAwCvB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}