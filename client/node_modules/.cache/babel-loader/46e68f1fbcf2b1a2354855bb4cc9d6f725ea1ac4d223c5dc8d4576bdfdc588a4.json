{"ast":null,"code":"var _jsxFileName = \"/mnt/sdb1/MyFiles/Projects/debt-manager/client/src/components/Table.js\";\nimport React from 'react';\nimport DeleteButton from './DeleteButton';\nimport './Table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  columnNames,\n  rows,\n  hasDeleteButton\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: columnNames.map((columnName, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: columnName\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: rows.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [columnNames.map((columnName, columnIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: row[columnName]\n        }, columnIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: hasDeleteButton ? /*#__PURE__*/_jsxDEV(DeleteButton, {\n            children: \"Button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }, this) /* Add a button to the last column */ : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)]\n      }, rowIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","DeleteButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Table","columnNames","rows","hasDeleteButton","className","children","map","columnName","index","fileName","_jsxFileName","lineNumber","columnNumber","row","rowIndex","columnIndex","_c","$RefreshReg$"],"sources":["/mnt/sdb1/MyFiles/Projects/debt-manager/client/src/components/Table.js"],"sourcesContent":["import React from 'react';\nimport DeleteButton from './DeleteButton';\nimport './Table.css';\n\nconst Table = ({ columnNames, rows, hasDeleteButton }) => {\n    return (\n        <table className='table'>\n            <thead>\n                <tr>\n                    {columnNames.map((columnName, index) => (\n                        <th key={index}>{columnName}</th>\n                    ))}\n                </tr>\n            </thead>\n            <tbody>\n                {rows.map((row, rowIndex) => (\n                    <tr key={rowIndex}>\n                        {columnNames.map((columnName, columnIndex) => (\n                            <td key={columnIndex}>{row[columnName]}</td>\n                        ))}\n                        <td>\n                            {hasDeleteButton ?\n                                <DeleteButton>Button</DeleteButton> /* Add a button to the last column */\n                                : <></>\n                            }\n                        </td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n};\n\nexport default Table;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,KAAK,GAAGA,CAAC;EAAEC,WAAW;EAAEC,IAAI;EAAEC;AAAgB,CAAC,KAAK;EACtD,oBACIN,OAAA;IAAOO,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBR,OAAA;MAAAQ,QAAA,eACIR,OAAA;QAAAQ,QAAA,EACKJ,WAAW,CAACK,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBAC/BX,OAAA;UAAAQ,QAAA,EAAiBE;QAAU,GAAlBC,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CACnC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACRf,OAAA;MAAAQ,QAAA,EACKH,IAAI,CAACI,GAAG,CAAC,CAACO,GAAG,EAAEC,QAAQ,kBACpBjB,OAAA;QAAAQ,QAAA,GACKJ,WAAW,CAACK,GAAG,CAAC,CAACC,UAAU,EAAEQ,WAAW,kBACrClB,OAAA;UAAAQ,QAAA,EAAuBQ,GAAG,CAACN,UAAU;QAAC,GAA7BQ,WAAW;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuB,CAC9C,CAAC,eACFf,OAAA;UAAAQ,QAAA,EACKF,eAAe,gBACZN,OAAA,CAACF,YAAY;YAAAU,QAAA,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAAC,CAAC,qDAClCf,OAAA,CAAAE,SAAA,mBAAI;QAAC;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CAAC;MAAA,GATAE,QAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUb,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEhB,CAAC;AAACI,EAAA,GA3BIhB,KAAK;AA6BX,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}